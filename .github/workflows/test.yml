name: Test

on:
  push:
    branches: main
  pull_request:
    types:
      - opened

env:
  UV_SYSTEM_PYTHON: 1

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    strategy:
      matrix:
        python-version:
          - "3.13"
      fail-fast: false

    environment: SECRET_KEY
    steps:
      - uses: actions/checkout@v4
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.4.15"
          enable-cache: true
          cache-dependency-glob: |
            requirements.txt
            pyproject.toml
      - name: Install Dependencies
        run: uv pip install -r requirements.txt
      - run: mkdir coverage
      - name: Test
        run: coverage run manage.py test
        env:
          COVERAGE_FILE: coverage/.coverage.${{ runner.os }}-py${{ matrix.python-version }}
          CONTEXT: ${{ runner.os }}-py${{ matrix.python-version }}
      - name: Store coverage files
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}-${{ matrix.pydantic-version }}
          path: coverage
          include-hidden-files: true

  coverage-combine:
    needs: [test]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    environment: SECRET_KEY
    steps:
      - uses: actions/checkout@v4
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.4.15"
          enable-cache: true
          cache-dependency-glob: |
            requirements.txt
            pyproject.toml
      - name: Install Dependencies
        run: uv pip install -r requirements.txt
      - name: Get coverage files
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          path: coverage
          merge-multiple: true
      - run: ls -la coverage
      - run: coverage combine coverage
      - run: coverage report
      - run: coverage html --title "Coverage for ${{ github.sha }}"
      - name: Store coverage HTML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: htmlcov
          include-hidden-files: true